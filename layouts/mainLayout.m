% Esta es la vista principal
function mainLayout(status,file)
    % construir la vista
    hs = build(200,430);
    % mostrar la 'figura' de la vista
    hs.fig.Visible = 'on';
    % -------------------------subfunciones--------------------------------
    % "build":
    % agrega los componentes de GUIDE a la 'figura' de la vista y da como
    % resultado todos estos en una estructura de datos
    function hs = build(height,width)
        hs.fig = figure('Visible','off',...
                  'Resize','off',...
                  'Tag','fig',...
                  'Position',[200 200 width height]);
        hs.label = uicontrol(hs.fig,'Style','text',...
                'FontSize',12,...
                'String','Nano Roughness',...
                'FontWeight','bold',...
                'Position',[0 height-50 width 50]);
        % agregar los botones
        hs.fileLayoutButton = uicontrol(hs.fig,...
                  'String','Choose File...',...
                  'Tag','button',...
                  'Callback',@buttonCallback,...
                  'Position',[10 height-80 200 30]);
        hs.randomDSButton = uicontrol(hs.fig, ...
                  'String', 'Generate Random Data Set...', ...
                  'Tag', 'button3', ...
                  'Callback', @buttonCallback, ...
                  'Position', [10 height-120 200 30]);
        hs.inputDSButton = uicontrol(hs.fig, ...
                  'String', 'Input Data Set...', ...
                  'Tag', 'button4', ...
                  'Callback', @buttonCallback, ...
                  'Position', [220 height-80 200 30]);
        % solo mostrar los botones cuando hay una imagen cargada
        if status == 1
            hs.randomDSButton.Visible = 'on';
            hs.inputDSButton.Visible = 'on';
        else
            hs.randomDSButton.Visible = 'off';
            hs.inputDSButton.Visible = 'off';
        end
        hs.aboutButton = uicontrol(hs.fig, ...
                  'String', 'About...', ...
                  'Tag', 'button5', ...
                  'Callback', @buttonCallback, ...
                  'Position', [width/2-100 40 200 30]);
        hs.quitButton = uicontrol(hs.fig, ...
                  'String', 'Quit', ...
                  'Tag', 'button2', ...
                  'Callback', @buttonCallback, ...
                  'Position', [width/2-100 10 200 30]);
    end
    % "buttonCallback": 
    % esta función es llamada cada vez que un botón de la ventana es
    % presionado
    function buttonCallback(hObject, event)
        if(hObject == hs.fileLayoutButton)
            close all
            % abrir la vista de selección de archivo
            fileLayout();
        elseif(hObject == hs.randomDSButton)
            close all
            % generar un pixel de inicio pseudoaleatorio
            y = randi(length(file(:,1)));
            x = randi(length(file(1,:)));
            % generar un tamaño pseudoaleatorio del conjunto de datos
            len = randi(138);
            % generar una dirección pseudoaleatoria para el recorrido de la
            % imagen
            dir = randi(4) - 1;
            % abrir la vista de visualización de datos
            dataLayout(file, [x y], len, dir);
        elseif(hObject == hs.inputDSButton)
            close all
            % abrir la vista de entrada de rango de pixeles
            inputLayout(file);
        elseif(hObject == hs.aboutButton)
            close all
            % abrir la vista de información
            aboutLayout(status, file);
        elseif(hObject == hs.quitButton)
            close all
        end
    end
end